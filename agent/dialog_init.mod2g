% generic agent files (do not include domain specific references)
use dialog.
use utils.

% generic agent files (include domain specific references)
use dialogflow.
use patterns.

% domain specific files
use ingredient_hierarchies.
use recipe_database.
use recipe_selection.

module dialog_init {

	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%% Initialize dialog management parameters.										%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	if true then
		% Agenda (list of patterns)
		%TASK ALERT UPDATE AGENDA
		%
		insert(agenda(["c10greeting"])) +
		% Session history (initialized to a list of one empty sequence).
		insert(session([ [start] ])) +
		% Memory (initially empty).
		insert(memory([])) +
		% Initialize missingSlots/1. See dialog.pl for more info.
		insert(missingSlots([])) +
		% Initialize stepCounter/1 and totalSteps/1. See dialog.pl for more info.
		insert(stepCounter(-1), totalSteps(0)).

	% Copy agenda to be able to reinitialize (restart) agenda.
	if agenda(Agenda) then insert(initialAgenda(Agenda)).
	
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%% Initialize behavioural parameters (to finetune agent behavior)	%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%TASK ALERT: INSERT AGENT NAME
	
	if true then insert(agentName(''), lastTopicCheck).
	
	% Next line prints all user intents that occur in patterns to agent's console
	if retrieveIntentsfromPatterns(user, Intents),
		term_to_atom(Intents, A)
	then print(A).
	
	% Insert statement to wait for 'Start' button to be pressed.
	if true then insert(waitingForEvent('Start')) + log("waiting for: Start").
}